"use strict";(self.webpackChunksdk_mobile_doc=self.webpackChunksdk_mobile_doc||[]).push([[5040],{28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var r=i(96540);const t={},s=r.createContext(t);function l(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(s.Provider,{value:n},e.children)}},80983:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Mobile_SDK","title":"Getting Started","description":"Latest available version","source":"@site/android_versioned_docs/version-2.3.X/Mobile_SDK.md","sourceDirName":".","slug":"/Mobile_SDK","permalink":"/sdk-mobile-documentation/docs/android/Mobile_SDK","draft":false,"unlisted":false,"tags":[],"version":"2.3.X","frontMatter":{},"sidebar":"sidebar","next":{"title":"Tracking Component","permalink":"/sdk-mobile-documentation/docs/android/Tracking_Component"}}');var t=i(74848),s=i(28453);const l={},o="Getting Started",a={},c=[{value:"Latest available version",id:"latest-available-version",level:2},{value:"1. Introduction",id:"1-introduction",level:2},{value:"1.1. Minimum requirements",id:"11-minimum-requirements",level:2},{value:"2. Initial integration",id:"2-initial-integration",level:2},{value:"2.1. Add private gradle repository",id:"21-add-private-gradle-repository",level:3},{value:"2.2. Dependencies required for basic integration",id:"22-dependencies-required-for-basic-integration",level:3},{value:"3. SDK initialization",id:"3-sdk-initialization",level:2},{value:"3.1. Licence injection",id:"31-licence-injection",level:3},{value:"a. Obtaining the licence through a service",id:"a-obtaining-the-licence-through-a-service",level:4},{value:"b. Injecting the licence as a String",id:"b-injecting-the-licence-as-a-string",level:4},{value:"3.2. Receipt of errors",id:"32-receipt-of-errors",level:3},{value:"4. Start a new operation",id:"4-start-a-new-operation",level:2},{value:"4.1 Existing types of operation",id:"41-existing-types-of-operation",level:3},{value:"5. Launch of components",id:"5-launch-of-components",level:2},{value:"6. Result return",id:"6-result-return",level:2},{value:"7. Close session / Logout",id:"7-close-session--logout",level:2},{value:"8. Auxiliary controllers",id:"8-auxiliary-controllers",level:2},{value:"8.1 Getting the OperationId",id:"81-getting-the-operationid",level:3},{value:"8.2 Getting the OperationType",id:"82-getting-the-operationtype",level:3},{value:"8.3 Getting the SessionId",id:"83-getting-the-sessionid",level:3},{value:"8.4 Getting the CustomerID",id:"84-getting-the-customerid",level:3},{value:"8.5 Setting the CustomerID",id:"85-setting-the-customerid",level:3},{value:"9. Debugging and error-handling options",id:"9-debugging-and-error-handling-options",level:2},{value:"9.1. Error checking of Tracking connections to the platform",id:"91-error-checking-of-tracking-connections-to-the-platform",level:3},{value:"9.2. Activation of General Debugging Logs",id:"92-activation-of-general-debugging-logs",level:3},{value:"10. Application Event Tracking and Analysis",id:"10-application-event-tracking-and-analysis",level:2}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,t.jsx)(n.h2,{id:"latest-available-version",children:"Latest available version"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"2.3.3\n"})}),"\n",(0,t.jsx)(n.h2,{id:"1-introduction",children:"1. Introduction"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"SDK Mobile"})," is a set of libraries (",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"Components"})}),") that offer a\nseries of functionalities and services, allowing their integration into\na Mobile application in a simple and totally scalable way. Certain\ncomponents must be installed depending on the use case required. Its\nhigh level of modularity allows other new components to be added in the\nfuture without affecting those already integrated into the project."]}),"\n",(0,t.jsx)(n.h2,{id:"11-minimum-requirements",children:"1.1. Minimum requirements"}),"\n",(0,t.jsx)(n.p,{children:"The minimum version of the Android SDK required is as follows:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Minimum SDK (minSdk): ",(0,t.jsx)(n.strong,{children:"23"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["API Version: ",(0,t.jsx)(n.strong,{children:"35"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Kotlin: ",(0,t.jsx)(n.strong,{children:"2.1.10"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Plugin Gradle Android: ",(0,t.jsx)(n.strong,{children:"8.9.1"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"2-initial-integration",children:"2. Initial integration"}),"\n",(0,t.jsx)(n.p,{children:"This section will explain step by step how to integrate the basic\ncomponents into an existing project."}),"\n",(0,t.jsx)(n.h3,{id:"21-add-private-gradle-repository",children:"2.1. Add private gradle repository"}),"\n",(0,t.jsxs)(n.p,{children:["For security and maintenance reasons, the new ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"SDKMobile"})})," components\nare stored in private repositories that require specific credentials to\naccess them. ",(0,t.jsx)("u",{children:"These credentials"})," must be obtained through the\n",(0,t.jsx)(n.strong,{children:"Facephi"})," support team."]}),"\n",(0,t.jsxs)(n.p,{children:["Once the credentials are obtained, the following code snippet to\nconfigure the maven repository must be included in your project's\nGradle, or in the ",(0,t.jsx)(n.strong,{children:"settings.gradle"})," file of your project. It is\nrecommended to include it after ",(0,t.jsx)(n.em,{children:"mavenCentral()"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'maven {\n    Properties props = new Properties()\n    def propsFile = new File(\'local.properties\')\n    if(propsFile.exists()){\n        props.load(new FileInputStream(propsFile))\n    }\n    name="external"\n    url = uri("https://facephicorp.jfrog.io/artifactory/maven-pro-fphi")\n    credentials {\n        username = props["artifactory.user"] ?: System.getenv("USERNAME_ARTIFACTORY")\n        password = props["artifactory.token"] ?: System.getenv("TOKEN_ARTIFACTORY")\n    }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"The credentials (User and Token) must be correctly configured for the\nproject to retrieve the dependencies correctly."}),"\n",(0,t.jsx)(n.p,{children:"There are several ways to configure the repository access credentials:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"As environment variables with the following name. For example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"export USERNAME_ARTIFACTORY=YOUR_CREDENTIALS_USERNAME\nexport TOKEN_ARTIFACTORY=YOUR_CREDENTIALS_TOKEN\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"If the dependencies are not recognized when synchronising"}),", they\nmust be included via environment variables in the file:"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"~/.zshrc"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Included in the ",(0,t.jsx)(n.em,{children:"local.properties"})," file with the following\nstructure:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"artifactory.user=YOUR_CREDENTIALS_USERNAME\nartifactory.token=YOUR_CREDENTIALS_TOKEN\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"22-dependencies-required-for-basic-integration",children:"2.2. Dependencies required for basic integration"}),"\n",(0,t.jsxs)(n.p,{children:["To avoid conflicts and compatibility problems, if you want to install\nthe component in a project containing an old Facephi libraries\n(",(0,t.jsx)(n.strong,{children:"Widgets"}),") version, these must be removed entirely before installing\nthe ",(0,t.jsx)(n.strong,{children:"SDKMobile"})," components."]}),"\n",(0,t.jsxs)(n.p,{children:["Currently, FacePhi libraries are distributed remotely through different\ndependency managers. The ",(0,t.jsx)(n.strong,{children:"mandatory dependency"})," that must be\ninstalled:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'implementation "com.facephi.androidsdk:sdk:$sdk_version"\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"3-sdk-initialization",children:"3. SDK initialization"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"It must be strictly avoided to initialize a controller that is not\ngoing to be used"})}),"\n",(0,t.jsxs)(n.p,{children:["Each component has a ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"Controller"})})," that will allow access to its\nfunctionality. Before they can be used, they must be properly\ninitialized. The steps to follow in the initialization are as follows:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Include the Application object"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Decide whether the licence will be included via a ",(0,t.jsx)(n.em,{children:"String"})," or a\n",(0,t.jsx)(n.em,{children:"remote licensing service"})," (",(0,t.jsx)(n.strong,{children:"see section 3.1"}),")."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Include ",(0,t.jsx)(n.em,{children:"TrackingController"})," in case you want to connect to the\nplatform."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Point 3"})," is optional and would require using the ",(0,t.jsx)(n.strong,{children:"Tracking"}),"\ncomponent (more information about this module in its documentation)."]}),"\n",(0,t.jsxs)(n.p,{children:["Example without ",(0,t.jsx)(n.em,{children:"TrackingController:"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'val sdkConfig = SdkConfigurationData(\n    sdkApplication = SdkApplication(application),\n    licensing = LicensingOffline("LICENSE")\n)\n\nval result = SDKController.initSdk(sdkConfig)\n\nwhen (result) {\n  is SdkResult.Success -> Napier.d("APP: INIT SDK: OK")\n  is SdkResult.Error -> Napier.d(\n          "APP: INIT SDK: KO - ${result.error.name}"\n        )\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Example with ",(0,t.jsx)(n.em,{children:"TrackingController:"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'val sdkConfig = SdkConfigurationData(\n    sdkApplication = SdkApplication(application),\n    licensing = LicensingOffline("LICENSE"),\n    trackingController = TrackingController(),\n)\n\nval result = SDKController.initSdk(sdkConfig)\n\nwhen (result) {\n  is SdkResult.Success -> Napier.d("APP: INIT SDK: OK")\n  is SdkResult.Error -> Napier.d(\n          "APP: INIT SDK: KO - ${result.error.name}"\n        )\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"31-licence-injection",children:"3.1. Licence injection"}),"\n",(0,t.jsx)(n.p,{children:"As discussed above, there are currently two ways to inject the licence:"}),"\n",(0,t.jsx)(n.h4,{id:"a-obtaining-the-licence-through-a-service",children:"a. Obtaining the licence through a service"}),"\n",(0,t.jsx)(n.p,{children:"Through a service that requires a URL and an API-KEY as an identifier.\nThis would avoid problems when manipulating the licence, as well as the\nconstant replacement of these licences when a problem arises\n(malformation or improper modification, expiry of the licence...)."}),"\n",(0,t.jsx)(n.p,{children:"Kotlin:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'val sdkConfig = SdkConfigurationData(\n    sdkApplication = SdkApplication(application),\n    licensing = LicensingOnline(EnvironmentLicensingData(\n            apiKey = "...")\n      )),\n)\n\nval result = SDKController.initSdk(sdkConfig)\n\nwhen (result) {\n  is SdkResult.Success -> Napier.d("APP: INIT SDK: OK")\n  is SdkResult.Error -> Napier.d(\n          "APP: INIT SDK: KO - ${result.error.name}"\n        )\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Java:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'SDKController.INSTANCE.initSdk(\n    new SdkApplication(activity.getApplication()),\n    new LicensingOnline(new EnvironmentLicensingData(\n      apiKey = "...")),\n    sdkResult ->\n    {\n      if (sdkResult instanceof SdkResult.Success) {\n        Napier.d("APP: INIT SDK: OK")\n      } else if (sdkResult instanceof SdkResult.Error) {\n        Napier.d("APP: INIT SDK: KO - ${it.error}")\n      }\n    }\n  );\n'})}),"\n",(0,t.jsx)(n.h4,{id:"b-injecting-the-licence-as-a-string",children:"b. Injecting the licence as a String"}),"\n",(0,t.jsx)(n.p,{children:"You can assign the licence directly as a String, as follows:"}),"\n",(0,t.jsx)(n.p,{children:"Kotlin:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'val sdkConfig = SdkConfigurationData(\n    sdkApplication = SdkApplication(application),\n    licensing = LicensingOffline("LICENSE"),\n)\n\nval result = SDKController.initSdk(sdkConfig)\n\nwhen (result) {\n  is SdkResult.Success -> Napier.d("APP: INIT SDK: OK")\n  is SdkResult.Error -> Napier.d(\n          "APP: INIT SDK: KO - ${result.error.name}"\n        )\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Java:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'SDKController.INSTANCE.initSdk(\n  new SdkApplication(activity.getApplication()),\n  new LicensingOffline("LICENSE"),\n  sdkResult ->\n  {\n    if (sdkResult instanceof SdkResult.Success) {\n      Timber.d("APP: INIT SDK: OK")\n    } else if (sdkResult instanceof SdkResult.Error) {\n      Timber.d("APP: INIT SDK: KO - ${it.error}")\n    }\n  }\n);\n'})}),"\n",(0,t.jsx)(n.h3,{id:"32-receipt-of-errors",children:"3.2. Receipt of errors"}),"\n",(0,t.jsx)(n.p,{children:"On the error side, we will have the SdkError class."}),"\n",(0,t.jsx)(n.p,{children:"Error list:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"EMPTY_LICENSE: Empty license"}),"\n",(0,t.jsx)(n.li,{children:"INIT_AI_MODELS(error: String): Error obtained in the model download service"}),"\n",(0,t.jsx)(n.li,{children:"INIT_FLOW (error: String): Error obtained in the flow download service"}),"\n",(0,t.jsx)(n.li,{children:"LICENSE_CHECKER_ERROR (error: String): Error obtained verifying if the license is correct"}),"\n",(0,t.jsx)(n.li,{children:"LICENSING_ERROR (error: String): Error obtained in the license download service"}),"\n",(0,t.jsx)(n.li,{children:"NETWORK_CONNECTION_ERROR: Internet connection error"}),"\n",(0,t.jsx)(n.li,{children:"TRACKING_ERROR (error: String): Error obtained when starting the tracking controller"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"4-start-a-new-operation",children:"4. Start a new operation"}),"\n",(0,t.jsxs)(n.p,{children:["Every time you want to start the flow of a new operation (examples of\noperations would be ",(0,t.jsx)(n.em,{children:"onboarding, authentication, videoCall"}),", etc.), it\nis essential to tell the ",(0,t.jsx)(n.strong,{children:"SDKController"})," that it is going to start, so\nthe SDK will know that the following ",(0,t.jsx)(n.strong,{children:"Component"})," calls (also called\n",(0,t.jsx)(n.strong,{children:"Steps"}),") will be part of that operation. This is necessary ",(0,t.jsx)(n.em,{children:"to track"}),"\nthe global information of this operation on the platform in a\nsatisfactory way."]}),"\n",(0,t.jsxs)(n.p,{children:["When starting a process or flow, ",(0,t.jsx)(n.strong,{children:"always"})," call the ",(0,t.jsx)(n.strong,{children:"newOperation"}),"\nmethod"]}),"\n",(0,t.jsx)(n.p,{children:"This method has 3 input parameters:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"operationType"}),": Indicates whether an ONBOARDING or AUTHENTICATION\n2 process is to be performed."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"customerId"}),": Unique user ID if available (controlled at the\napplication level)."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"This parameter will be reflected for each operation in the\nplatform."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"steps"}),": List of steps of the operation if they have been\npreviously defined."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"This parameter will be reflected for each operation in the\nplatform."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["There are two ways to perform this operation start, depending on whether\nthe ",(0,t.jsx)(n.strong,{children:"steps that will form the flow"})," of the registration or\nauthentication process are known (in case the components are executed\nsequentially and always in the same way) or, on the contrary, if the\nflow ",(0,t.jsx)(n.strong,{children:"is not defined"})," and is unknown (for example, the final customer\nis the one who decides the order of execution of the components)."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Known"})," flow (the tracked operation will appear on the platform\nwith all the steps in the list). Example of implementation:"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Kotlin:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'val result = SDKController.newOperation(\n        operationType = OperationType.ONBOARDING,\n        customerId = "customer_id",\n        steps = listOf(Step.SELPHI_COMPONENT, Step.SELPHID_COMPONENT))\nwhen (result) {\n    is SdkResult.Success -> {\n        Timber.d("APP: NEW OPERATION OK")\n    }\n    is SdkResult.Error -> {\n        Timber.d("APP: NEW OPERATION ERROR: ${result.error.name}")\n    }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Java:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'SDKController.INSTANCE.newOperation(\n        OperationType.ONBOARDING,\n        "customer_id",\n        [Step.SELPHI_COMPONENT, Step.SELPHID_COMPONENT]\n        ){\n          if (sdkResult instanceof SdkResult.Success) {\n            Napier.d("APP: NEW OPERATION: OK")\n          } else if (sdkResult instanceof SdkResult.Error) {\n            Napier.d("APP: NEW OPERATION: KO - ${it.error}")\n          }\n        }\n  );\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Unknown"})," flow (the tracked operation will appear on the platform\nwith ellipses). Example of implementation:"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Kotlin:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'val result = SDKController.newOperation(\n        operationType = OperationType.ONBOARDING,\n        customerId = "customer_id",\nwhen (result) {\n    is SdkResult.Success -> {\n        Timber.d("APP: NEW OPERATION OK")\n    }\n    is SdkResult.Error -> {\n        Timber.d("APP: NEW OPERATION ERROR: ${result.error.name}")\n    }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Java:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:' SDKController.INSTANCE.newOperation(\n        OperationType.ONBOARDING,\n        "customer_id"\n        ){\n          if (sdkResult instanceof SdkResult.Success) {\n            Napier.d("APP: NEW OPERATION: OK")\n          } else if (sdkResult instanceof SdkResult.Error) {\n            Napier.d("APP: NEW OPERATION: KO - ${it.error}")\n          }\n        }\n  );\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"sdkResult"})," \u2192 Contains in data the information of the operation\ncreated."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Once the operation has been created"}),", the SDK components associated\nwith this operation can be executed. ",(0,t.jsx)("u",{children:"Consult"})," the specific\ndocumentation for each ",(0,t.jsx)("u",{children:"component"})," to find out how to do this."]}),"\n",(0,t.jsx)(n.h3,{id:"41-existing-types-of-operation",children:"4.1 Existing types of operation"}),"\n",(0,t.jsxs)(n.p,{children:["Currently, the following operations exist, during which certain\n",(0,t.jsx)(n.strong,{children:"Components (STEPS)"})," are used."]}),"\n",(0,t.jsx)(n.p,{children:"Below is a table showing the relationship between operations and steps:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Operation (OperationType)"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Component (Step)"})}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ONBOARDING"}),(0,t.jsxs)(n.td,{children:["SELPHI_COMPONENT",(0,t.jsx)("br",{}),"SELPHID_COMPONENT"]}),(0,t.jsxs)(n.td,{children:["- Facial validation of a selfie against a document's face ",(0,t.jsx)("br",{})," - Document OCR extraction ",(0,t.jsx)("br",{})," - Liveness detection"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"AUTHENTICATION"}),(0,t.jsx)(n.td,{children:"SELPHI_COMPONENT"}),(0,t.jsxs)(n.td,{children:["- Face validation using templates ",(0,t.jsx)("br",{})," - Liveness detection"]})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"This list will be expanded in future SDK updates as new components and\nuse cases are released."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"5-launch-of-components",children:"5. Launch of components"}),"\n",(0,t.jsxs)(n.p,{children:["Once the ",(0,t.jsx)(n.strong,{children:"new operation"})," has been created ",(0,t.jsx)(n.strong,{children:"(section 4)"}),", the\ndifferent SDK drivers can be launched. To consult this information,\naccess the ",(0,t.jsx)(n.strong,{children:"documentation for each component"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Launch example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"val result = SDKController.launch(XController(ConfigurationData()))\nwhen (result) {\n    is SdkResult.Success -> {\n        //Result OK\n        it.data\n    }\n    is SdkResult.Error -> {\n        //Result KO\n        it.error.name\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Java:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"SDKController.INSTANCE.launch(\n    new XController(new ConfigurationData()) {\n        if (sdkResult instanceof SdkResult.Success) {\n            //Result OK\n            it.data\n          } else if (sdkResult instanceof SdkResult.Error) {\n            //Result KO\n            it.error.name\n          }\n    }\n)\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"6-result-return",children:"6. Result return"}),"\n",(0,t.jsxs)(n.p,{children:["The result of each component will be returned through the SDK, keeping\nalways the same structure through the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"SdkResult"})})," class, whose class\nis a Sealed Class that can have two possible states:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"SdkResult.Success"}),": Indicates that the operation has finished\nsuccessfully and inside it has:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"data:"})})," Contains the type of data that is necessary\naccording to the process/component launched."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"SdkResult.Error"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"error:"})})," Contains the type of data that is necessary\naccording to the process/component launched."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The documentation for each specific component will provide a breakdown\nof the different fields this object can return."}),"\n",(0,t.jsx)(n.p,{children:"Example of use:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'when (result) {\n    is SdkResult.Success -> {\n        Napier.d("Selphi: OK")\n        // SelphiResult:\n        // result.data.bestImage\n    }\n\n    is SdkResult.Error -> Napier.d("Selphi: KO - ${result.error.name}")\n}\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"7-close-session--logout",children:"7. Close session / Logout"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Before the application is destroyed"}),", the SDK session must be closed\nto notify the platform of its completion. To do this, the following line\nof code is executed:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"SDKController.closeSession()\n"})}),"\n",(0,t.jsx)(n.p,{children:"If a logout is performed, it will not be possible to launch controllers\nuntil a new operation is started again."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"8-auxiliary-controllers",children:"8. Auxiliary controllers"}),"\n",(0,t.jsx)(n.p,{children:"This section includes other controllers and auxiliary operations, some\nof them optional, which may be necessary for the correct completion of\nthe flow."}),"\n",(0,t.jsxs)(n.p,{children:["These fields are necessary for communication with the ",(0,t.jsx)(n.strong,{children:"Facephi"}),"\nservice, in the event of any ",(0,t.jsx)(n.strong,{children:"verification"})," and ",(0,t.jsx)(n.em,{children:"tracking"})," of a\nspecific operation."]}),"\n",(0,t.jsx)(n.h3,{id:"81-getting-the-operationid",children:"8.1 Getting the OperationId"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'val result = SDKController.launch(GetOperationIdController())\nNapier.d("Operation ID ${result}")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"82-getting-the-operationtype",children:"8.2 Getting the OperationType"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'val result = SDKController.launch(GetOperationTypeController())\nNapier.d("Operation type ${result}")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"83-getting-the-sessionid",children:"8.3 Getting the SessionId"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'val result = SDKController.launch(GetSessionIdController())\nNapier.d("Session ID ${result}")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"84-getting-the-customerid",children:"8.4 Getting the CustomerID"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'val result = SDKController.launch(GetCustomerIdController())\nNapier.d("Customer ID ${result}")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"85-setting-the-customerid",children:"8.5 Setting the CustomerID"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'SDKController.launch(CustomerIdController("CustomerId"))\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"9-debugging-and-error-handling-options",children:"9. Debugging and error-handling options"}),"\n",(0,t.jsx)(n.p,{children:"Certain options in the SDK allow an increase in the debug logs in order\nto check that everything is working correctly."}),"\n",(0,t.jsx)(n.h3,{id:"91-error-checking-of-tracking-connections-to-the-platform",children:"9.1. Error checking of Tracking connections to the platform"}),"\n",(0,t.jsx)(n.p,{children:"Once the SDK has started correctly, certain settings can be applied to\nhave more information about possible tracking errors, which can be\ntracked through this driver release:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'SDKController.launch(TrackingErrorController {\n    Napier.d("Tracking Error: ${it.name}")\n})\n'})}),"\n",(0,t.jsx)(n.h3,{id:"92-activation-of-general-debugging-logs",children:"9.2. Activation of General Debugging Logs"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:" if (BuildConfig.DEBUG) {\n  SDKController.enableDebugMode()\n }\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"10-application-event-tracking-and-analysis",children:"10. Application Event Tracking and Analysis"}),"\n",(0,t.jsx)(n.p,{children:"Event functionality allows key interactions within the application, such as screen changes and user actions, to be recorded and interpreted, facilitating real-time behavioural analysis."}),"\n",(0,t.jsx)(n.p,{children:"Each event is sent with a specific timestamp, type and detail, providing structured tracking and optimising the user experience with accurate, actionable data."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:' SDKController.getAnalyticsEvents { time, componentName, eventType, info ->\n            Log.i { "EVENTS", "*** $time - ${componentName.name} -" +\n                " ${eventType.name} -  ${info ?: ""} " }\n        }\n'})}),"\n",(0,t.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);